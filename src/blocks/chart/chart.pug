//- Options:
//- 🞂 title: string    - заголовок после суммы значений секций диаграммы
//- 🞂 gap: number      - размер пробела между секциями диаграммы
//- 🞂 duration: number - продолжительность анимации диаграммы
//- 🞂 sections: [{     - секции диаграммы
//-   🞂 name: string   - имя секции
//-   🞂 value: number  - значение секции
//-   🞂 gradient: [    - градиент секции
//-     🞂 [0]: string  - ID градиента
//-     🞂 [1]: string  - начальный цвет градиента
//-     🞂 [2]: string  - конечный цвет градиента
//-     ]
//-   ]}

mixin chart(options)
  -
    const defaults = {
      title: 'undefined',
      gap: 0,
      duration: 0,
      sections: [
        {
          name: 'undefined',
          value: 0,
          gradient: ['undefined1', '#000000', '#000000'],
        },
        {
          name: 'undefined',
          value: 0,
          gradient: ['undefined2', '#000000', '#000000'],
        },
        {
          name: 'undefined',
          value: 0,
          gradient: ['undefined3', '#000000', '#000000'],
        },
      ],
    };

  -
    const {
      title,
      gap,
      duration,
      sections,
    } = Object.assign(defaults, options);

  .chart(data-gap=gap)
    ._container
      ._diagram
        svg._svg(viewbox='0 0 33 33')
          defs._defs
            each item in sections
              lineargradient._gradient(id=item.gradient[0], x1='1', y1='1', x2='0', y2='0')
                stop._stop(offset='0', stop-color=item.gradient[1])
                stop._stop(offset='1', stop-color=item.gradient[2])

          - const sum = sections.reduce((sum , current) => sum + current.value, 0);
          - let offset = -100 - gap / 2;
          each item in sections
            - const percent = (item.value / sum) * 100 || 0;
            - const array = `${Math.max(0, percent - gap)} 100`;
            - offset += percent;
            circle._circle(r='15.9', cx='50%', cy='50%', style=`--duration: ${duration}ms; --stroke: url(#${item.gradient[0]}); --array:${array}; --offset:${offset};`, data-value=item.value)
        ._title
          span._sum
            | 0
          | #{title}
        ._tooltip(style='--top: 0; --left: 0; --borderColor: #000000;')
          ._name
            | #{sections[0].name}
          ._details(style='--gradient: linear-gradient(#ffffff, #000000);')
            | #{title}:
            span._value
              | #{sections[0].value}
    ul._legend
      each item in sections
        li._item
          button._button.-active(type='button', style=`--shadow-color: ${item.gradient[1]}; --gradient: linear-gradient(${item.gradient[1]}, ${item.gradient[2]});`)
            | #{item.name}
