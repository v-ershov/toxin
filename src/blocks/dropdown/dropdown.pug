//- Options:
//- üûÇ list: [{               - —Å–ø–∏—Å–æ–∫ –ø—É–Ω–∫—Ç–æ–≤ –¥—Ä–æ–ø–¥–∞—É–Ω–∞
//-   üûÇ name: string         - –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—É–Ω–∫—Ç–∞ (–≤–æ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–º —á–∏—Å–ª–µ)
//-   üûÇ values: [            - –∑–Ω–∞—á–µ–Ω–∏—è –ø—É–Ω–∫—Ç–∞
//-     üûÇ [0]: number        - —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø—É–Ω–∫—Ç–∞
//-     üûÇ [1]: number        - –º–∏–Ω. –∑–Ω–∞—á–µ–Ω–∏–µ –ø—É–Ω–∫—Ç–∞
//-     üûÇ [2]: number        - –º–∞–∫—Å. –∑–Ω–∞—á–µ–Ω–∏–µ –ø—É–Ω–∫—Ç–∞
//-     ]
//-   üûÇ words: [             - –Ω–∞–∑–≤–∞–Ω–∏—è –ø—É–Ω–∫—Ç–∞ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Å–∫–ª–æ–Ω–µ–Ω–∏—è —Å–ª–æ–≤–∞
//-     üûÇ [0]: string        - –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—É–Ω–∫—Ç–∞ (–≤ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–º —á–∏—Å–ª–µ)
//-     üûÇ [2]: string        - –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—É–Ω–∫—Ç–∞ (–ø–æ—Å–ª–µ–¥–Ω—è—è —Ü–∏—Ñ—Ä–∞ –∑–Ω–∞—á–µ–Ω–∏—è –≤—Ö–æ–¥–∏—Ç –≤ –¥–∏–∞–ø–∞–∑–æ–Ω 2-4)
//-     üûÇ [3]: string        - –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—É–Ω–∫—Ç–∞ (–ø–æ—Å–ª–µ–¥–Ω—è—è —Ü–∏—Ñ—Ä–∞ –∑–Ω–∞—á–µ–Ω–∏—è —Ä–∞–≤–Ω–∞ 0, –ª–∏–±–æ
//-                            –ø–æ—Å–ª–µ–¥–Ω—è—è —Ü–∏—Ñ—Ä–∞ –∑–Ω–∞—á–µ–Ω–∏—è –≤—Ö–æ–¥–∏—Ç –≤ –¥–∏–∞–ø–∞–∑–æ–Ω 5-9, –ª–∏–±–æ
//-                            –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–≤–µ —Ü–∏—Ñ—Ä—ã –∑–Ω–∞—á–µ–Ω–∏—è –≤—Ö–æ–¥—è—Ç –≤ –¥–∏–∞–ø–∞–∑–æ–Ω 10-19)
//-     ]
//-   }]
//- üûÇ words: [               - –æ–±—â–∏–µ –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö –ø—É–Ω–∫—Ç–æ–≤ —Å–ø–∏—Å–∫–∞ –¥—Ä–æ–ø–¥–∞—É–Ω–∞ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Å–∫–ª–æ–Ω–µ–Ω–∏—è —Å–ª–æ–≤–∞
//-   üûÇ [0]: string          - –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏–µ (–≤ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–º —á–∏—Å–ª–µ)
//-   üûÇ [1]: string          - –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏–µ (–ø–æ—Å–ª–µ–¥–Ω—è—è —Ü–∏—Ñ—Ä–∞ –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤—Ö–æ–¥–∏—Ç –≤ –¥–∏–∞–ø–∞–∑–æ–Ω 2-4)
//-   üûÇ [2]: string          - –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏–µ (–ø–æ—Å–ª–µ–¥–Ω—è—è —Ü–∏—Ñ—Ä–∞ –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä–∞–≤–Ω–∞ 0, –ª–∏–±–æ
//-                            –ø–æ—Å–ª–µ–¥–Ω—è—è —Ü–∏—Ñ—Ä–∞ –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤—Ö–æ–¥–∏—Ç –≤ –¥–∏–∞–ø–∞–∑–æ–Ω 5-9, –ª–∏–±–æ
//-                            –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–≤–µ —Ü–∏—Ñ—Ä—ã –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤—Ö–æ–¥—è—Ç –≤ –¥–∏–∞–ø–∞–∑–æ–Ω 10-19)
//-   ]
//- üûÇ labelPrimary: string   - –ª–µ–π–±–ª –ø–æ–ª—è –¥—Ä–æ–ø–¥–∞—É–Ω–∞ (–ø–µ—Ä–≤–∏—á–Ω—ã–π)
//- üûÇ labelSecondary: string - –ª–µ–π–±–ª –ø–æ–ª—è –¥—Ä–æ–ø–¥–∞—É–Ω–∞ (–≤—Ç–æ—Ä–∏—á–Ω—ã–π)
//- üûÇ isButtons: boolean     - –µ—Å–ª–∏ true, —Ç–æ —É –¥—Ä–æ–ø–¥–∞—É–Ω–∞ –¥–æ—Å—Ç—É–ø–Ω—ã –∫–Ω–æ–ø–∫–∏ "–û—á–∏—Å—Ç–∏—Ç—å" –∏ "–ü—Ä–∏–º–µ–Ω–∏—Ç—å"
//- üûÇ mods: string[]         - –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –±–ª–æ–∫–∞
//- üûÇ attrsField: object     - –∞—Ç—Ä–∏–±—É—Ç—ã –ø–æ–ª—è –¥—Ä–æ–ø–¥–∞—É–Ω–∞

include /blocks/button/button.pug
include /blocks/field/field.pug

mixin dropdown(options)
  -
    const defaults = {
      list: [
        {
          name: 'undefined',
          values: [0, 0, 0],
          words: [],
        },
        {
          name: 'undefined',
          values: [0, 0, 0],
          words: [],
        },
        {
          name: 'undefined',
          values: [0, 0, 0],
          words: [],
        },
      ],
      words: ['undefined', 'undefined', 'undefined'],
      labelPrimary: '',
      labelSecondary: '',
      isButtons: false,
      mods: [],
      attrsField: {},
    };

  -
    const {
      list,
      words,
      labelPrimary,
      labelSecondary,
      isButtons,
      mods,
      attrsField,
    } = Object.assign(defaults, options);

  .dropdown(class=getModifiers('dropdown', mods))
    +field({
      labelPrimary,
      labelSecondary,
      mods: ['dropdown'],
      attrs: Object.assign(attrsField, {
        tabindex: '-1',
        readonly: true,
        'data-words': `${words[0]}, ${words[1]}, ${words[2]}`,
      }),
    })
    ._menu(style='--height: 100vh;')
      ul._list
        each item in list
          li._item(data-words=item.words.length ? `${item.words[0]}, ${item.words[1]}, ${item.words[2]}` : false)
            ._name
              | #{item.name}
            ._controls
              button._spinner(type='button', name='decrement', tabindex='-1')
                | &minus;
              input._number(type='number', value=item.values[0], min=item.values[1], max=item.values[2], readonly)
              button._spinner(type='button', name='increment', tabindex='-1')
                | +
      if isButtons
        ._buttons
          ._button.-reset.-hidden
            +button({
              text: '–û—á–∏—Å—Ç–∏—Ç—å',
              mods: ['bodyless', 'text-gray'],
              attrs: {
                name: 'reset',
              },
            })
          ._button
            +button({
              text: '–ü—Ä–∏–º–µ–Ω–∏—Ç—å',
              mods: ['bodyless'],
              attrs: {
                name: 'apply',
              },
            })
